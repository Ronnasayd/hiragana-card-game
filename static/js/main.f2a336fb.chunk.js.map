{"version":3,"sources":["hiragana.js","pages/Home/styles.js","utils/index.js","pages/Home/index.js","styles/index.js","index.js"],"names":["hiragana","character","romaji","sound","color","hiragana_divided","letter","slice","Container","styled","div","Title","h1","CardContainer","props","size","numberRowsAndColumns","Card","CardFront","CardBack","parseInt","match","Table","table","indexChoice","distribution","ur","Math","random","total","arr","map","value","indexOf","length","isInQueue","sample","sampleArray","x","getRandomSamples","qtd","picked","array","newSamples","samples","forEach","push","softMax","randomNumber","element","index","obj1","id","obj2","shuffle","len","newArray","floor","splice","sumExp","reduce","number","exp","Home","useState","flipCounter","setFlipCounter","firstCard","setFirstCard","secondCard","setSecondCard","hiraganaSamples","setHiraganaSamples","hiraganaPicked","setHiraganaPicked","gameAdvanced","setGameAdvanced","openedCards","setOpenedCards","continuos","setContinuos","score","setScore","useEffect","setTimeout","document","querySelectorAll","style","transform","randomSamples","ref","className","key","onClick","e","currentTarget","querySelector","play","src","type","background","padding","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f2a336fb.chunk.js","sourcesContent":["export const hiragana = [\n  {\n    character: \"あ\",\n    romaji: \"a\",\n    sound: \"a.mp3\",\n    color: \"hsl(3, 100%, 20%)\",\n  },\n  {\n    character: \"い\",\n    romaji: \"i\",\n    sound: \"i.mp3\",\n    color: \"hsl(3, 100%, 30%)\",\n  },\n  {\n    character: \"う\",\n    romaji: \"u\",\n    sound: \"u.mp3\",\n    color: \"hsl(3, 100%, 40%)\",\n  },\n  {\n    character: \"え\",\n    romaji: \"e\",\n    sound: \"e.mp3\",\n    color: \"hsl(3, 100%, 50%)\",\n  },\n  {\n    character: \"お\",\n    romaji: \"o\",\n    sound: \"o.mp3\",\n    color: \"hsl(3, 100%, 60%)\",\n  },\n  {\n    character: \"か\",\n    romaji: \"ka\",\n    sound: \"ka.mp3\",\n    color: \"hsl(221, 100%, 20%)\",\n  },\n  {\n    character: \"き\",\n    romaji: \"ki\",\n    sound: \"ki.mp3\",\n    color: \"hsl(221, 100%, 30%)\",\n  },\n  {\n    character: \"く\",\n    romaji: \"ku\",\n    sound: \"ku.mp3\",\n    color: \"hsl(221, 100%, 40%)\",\n  },\n  {\n    character: \"け\",\n    romaji: \"ke\",\n    sound: \"ke.mp3\",\n    color: \"hsl(221, 100%, 50%)\",\n  },\n  {\n    character: \"こ\",\n    romaji: \"ko\",\n    sound: \"ko.mp3\",\n    color: \"hsl(221, 100%, 60%)\",\n  },\n  {\n    character: \"さ\",\n    romaji: \"sa\",\n    sound: \"sa.mp3\",\n    color: \"hsl(147, 100%, 20%)\",\n  },\n  {\n    character: \"し\",\n    romaji: \"shi\",\n    sound: \"shi.mp3\",\n    color: \"hsl(147, 100%, 30%)\",\n  },\n  {\n    character: \"す\",\n    romaji: \"su\",\n    sound: \"su.mp3\",\n    color: \"hsl(147, 100%, 40%)\",\n  },\n  {\n    character: \"せ\",\n    romaji: \"se\",\n    sound: \"se.mp3\",\n    color: \"hsl(147, 100%, 50%)\",\n  },\n  {\n    character: \"そ\",\n    romaji: \"so\",\n    sound: \"so.mp3\",\n    color: \"hsl(147, 100%, 60%)\",\n  },\n  {\n    character: \"た\",\n    romaji: \"ta\",\n    sound: \"ta.mp3\",\n    color: \"hsl(181,100%,20%)\",\n  },\n  {\n    character: \"ち\",\n    romaji: \"chi\",\n    sound: \"chi.mp3\",\n    color: \"hsl(181,100%,30%)\",\n  },\n  {\n    character: \"つ\",\n    romaji: \"tsu\",\n    sound: \"tsu.mp3\",\n    color: \"hsl(181,100%,40%)\",\n  },\n  {\n    character: \"て\",\n    romaji: \"te\",\n    sound: \"te.mp3\",\n    color: \"hsl(181,100%,50%)\",\n  },\n  {\n    character: \"と\",\n    romaji: \"to\",\n    sound: \"to.mp3\",\n    color: \"hsl(181,100%,60%)\",\n  },\n  {\n    character: \"な\",\n    romaji: \"na\",\n    sound: \"na.mp3\",\n    color: \"hsl(61, 100%, 20%)\",\n  },\n  {\n    character: \"に\",\n    romaji: \"ni\",\n    sound: \"ni.mp3\",\n    color: \"hsl(61, 100%, 30%)\",\n  },\n  {\n    character: \"ぬ\",\n    romaji: \"nu\",\n    sound: \"nu.mp3\",\n    color: \"hsl(61, 100%, 40%)\",\n  },\n  {\n    character: \"ね\",\n    romaji: \"ne\",\n    sound: \"ne.mp3\",\n    color: \"hsl(61, 100%, 50%)\",\n  },\n  {\n    character: \"の\",\n    romaji: \"no\",\n    sound: \"no.mp3\",\n    color: \"hsl(61, 100%, 60%)\",\n  },\n  {\n    character: \"は\",\n    romaji: \"ha\",\n    sound: \"ha.mp3\",\n    color: \"hsl(327, 89%, 20%)\",\n  },\n  {\n    character: \"ひ\",\n    romaji: \"hi\",\n    sound: \"hi.mp3\",\n    color: \"hsl(327, 89%, 30%)\",\n  },\n  {\n    character: \"ふ\",\n    romaji: \"fu\",\n    sound: \"fu.mp3\",\n    color: \"hsl(327, 89%, 40%)\",\n  },\n  {\n    character: \"へ\",\n    romaji: \"he\",\n    sound: \"he.mp3\",\n    color: \"hsl(327, 89%, 50%)\",\n  },\n  {\n    character: \"ほ\",\n    romaji: \"ho\",\n    sound: \"ho.mp3\",\n    color: \"hsl(327, 89%, 60%)\",\n  },\n  {\n    character: \"ま\",\n    romaji: \"ma\",\n    sound: \"ma.mp3\",\n    color: \"hsl(25, 78%, 20%)\",\n  },\n  {\n    character: \"み\",\n    romaji: \"mi\",\n    sound: \"mi.mp3\",\n    color: \"hsl(25, 78%, 30%)\",\n  },\n  {\n    character: \"む\",\n    romaji: \"mu\",\n    sound: \"mu.mp3\",\n    color: \"hsl(25, 78%, 40%)\",\n  },\n  {\n    character: \"め\",\n    romaji: \"me\",\n    sound: \"me.mp3\",\n    color: \"hsl(25, 78%, 50%)\",\n  },\n  {\n    character: \"も\",\n    romaji: \"mo\",\n    sound: \"mo.mp3\",\n    color: \"hsl(25, 78%, 60%)\",\n  },\n  {\n    character: \"や\",\n    romaji: \"ya\",\n    sound: \"ya.mp3\",\n    color: \"hsl(294, 78%, 20%)\",\n  },\n  {\n    character: \"ゆ\",\n    romaji: \"yu\",\n    sound: \"yu.mp3\",\n    color: \"hsl(294, 78%, 40%)\",\n  },\n  {\n    character: \"よ\",\n    romaji: \"yo\",\n    sound: \"yo.mp3\",\n    color: \"hsl(294, 78%, 60%)\",\n  },\n  {\n    character: \"ら\",\n    romaji: \"ra\",\n    sound: \"ra.mp3\",\n    color: \"hsl(96, 100%, 20%)\",\n  },\n  {\n    character: \"り\",\n    romaji: \"ri\",\n    sound: \"ri.mp3\",\n    color: \"hsl(96, 100%, 30%)\",\n  },\n  {\n    character: \"る\",\n    romaji: \"ru\",\n    sound: \"ru.mp3\",\n    color: \"hsl(96, 100%, 40%)\",\n  },\n  {\n    character: \"れ\",\n    romaji: \"re\",\n    sound: \"re.mp3\",\n    color: \"hsl(96, 100%, 50%)\",\n  },\n  {\n    character: \"ろ\",\n    romaji: \"ro\",\n    sound: \"ro.mp3\",\n    color: \"hsl(96, 100%, 60%)\",\n  },\n  {\n    character: \"わ\",\n    romaji: \"wa\",\n    sound: \"wa.mp3\",\n    color: \"hsl(249, 50%, 20%)\",\n  },\n  {\n    character: \"を\",\n    romaji: \"wo\",\n    sound: \"wo.mp3\",\n    color: \"hsl(249, 50%, 60%)\",\n  },\n  {\n    character: \"ん\",\n    romaji: \"n\",\n    sound: \"n.mp3\",\n    color: \"hsl(0, 50%, 20%)\",\n  },\n];\n\nexport const hiragana_divided = [\n  {\n    letter: \"\",\n    hiragana: hiragana.slice(0, 5),\n  },\n  {\n    letter: \"k\",\n    hiragana: hiragana.slice(5, 10),\n  },\n  {\n    letter: \"s\",\n    hiragana: hiragana.slice(10, 15),\n  },\n  {\n    letter: \"t\",\n    hiragana: hiragana.slice(15, 20),\n  },\n  {\n    letter: \"n\",\n    hiragana: hiragana.slice(20, 25),\n  },\n  {\n    letter: \"h\",\n    hiragana: hiragana.slice(25, 30),\n  },\n  {\n    letter: \"m\",\n    hiragana: hiragana.slice(30, 35),\n  },\n  {\n    letter: \"y\",\n    hiragana: [hiragana[35], {}, hiragana[36], {}, hiragana[37]],\n  },\n  {\n    letter: \"r\",\n    hiragana: hiragana.slice(38, 43),\n  },\n  {\n    letter: \"w\",\n    hiragana: [hiragana[43], {}, {}, {}, hiragana[44]],\n  },\n  {\n    letter: \"n\",\n    hiragana: [hiragana[45], {}, {}, {}, {}],\n  },\n];\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 60px;\n`;\n\nexport const Title = styled.h1`\n  color: white;\n  margin-bottom: 10px;\n`;\n\nexport const CardContainer = styled.div`\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  display: grid;\n\n  grid-template-columns: ${(props) =>\n    `repeat(${props.numberRowsAndColumns},1fr)`};\n\n  grid-template-rows: ${(props) => `repeat(${props.numberRowsAndColumns},1fr)`};\n  grid-gap: 3px;\n`;\n\nexport const Card = styled.div`\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  transition: all 0.8s;\n  transform-style: preserve-3d;\n  transform: rotateY(180deg);\n`;\n\nexport const CardFront = styled.div`\n  background: linear-gradient(45deg, #210a40, #0089ff);\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  span {\n    color: rgba(255, 255, 255, 0.87);\n    font-size: 2rem;\n    text-align: center;\n  }\n`;\nexport const CardBack = styled.div`\n  background: ${(props) => props.color || \"blue\"};\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 3px solid #eee;\n  span {\n    color: ${(props) =>\n      parseInt(props.color.match(/hsl\\((.+),(.+)%,(.+)%\\)/)[3]) > 30\n        ? \"#000\"\n        : \"#fff\"};\n    /* color: white; */\n    font-size: 2rem;\n    text-align: center;\n    &:nth-child(2) {\n      font-size: 1rem;\n    }\n  }\n`;\n\nexport const Table = styled.table`\n  color: white;\n  font-size: 20px;\n  margin: 20px 0px;\n\n  th {\n    font-size: 1rem;\n  }\n  td:nth-child(1) {\n    font-size: 1rem;\n  }\n`;\n","import { hiragana } from \"../hiragana\";\n\nconst indexChoice = (distribution) => {\n  const ur = Math.random();\n  let total = 0;\n  const arr = distribution.map((value) => {\n    total += value;\n    return ur < total;\n  });\n\n  return arr.indexOf(true) !== -1 ? arr.indexOf(true) : distribution.length - 1;\n};\n\nexport const isInQueue = (sample, sampleArray) => {\n  return sampleArray.map((x) => x.romaji).indexOf(sample.romaji) !== -1;\n};\n\nexport const getRandomSamples = (qtd = 8, picked = []) => {\n  const array = [...hiragana];\n  const newSamples = [];\n  let samples = [];\n\n  if (picked.length === 0) {\n    array.forEach(() => picked.push(0));\n  }\n\n  const distribution = softMax(picked);\n\n  while (samples.length < qtd) {\n    const randomNumber = indexChoice(distribution);\n    const element = array[randomNumber];\n    if (!isInQueue(element, samples)) {\n      samples.push(element);\n      picked[randomNumber] += 1;\n    }\n  }\n\n  samples.forEach((sample, index) => {\n    const obj1 = { ...sample };\n    obj1.id = index;\n    newSamples.push(obj1);\n    const obj2 = { ...sample };\n    obj2.id = index + samples.length - 1;\n    newSamples.push(obj2);\n  });\n\n  return [shuffle([...newSamples]), picked];\n};\n\nexport const shuffle = (array) => {\n  const len = array.length;\n  const newArray = [];\n  for (let index = 0; index < len; index++) {\n    const randomNumber = Math.floor(Math.random() * (len - index));\n    newArray.push(array[randomNumber]);\n    array.splice(randomNumber, 1);\n  }\n  return newArray;\n};\n\nexport const softMax = (picked) => {\n  const sumExp = picked.reduce((total, number) => {\n    return total + Math.exp(-number);\n  });\n  return picked.map((number) => Math.exp(-number) / sumExp);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { hiragana_divided } from \"../../hiragana\";\nimport {\n  Container,\n  CardContainer,\n  Title,\n  Table,\n  Card,\n  CardFront,\n  CardBack,\n} from \"./styles\";\n\nimport { getRandomSamples } from \"../../utils\";\n\nconst Home = () => {\n  const number = 4;\n  const [flipCounter, setFlipCounter] = useState(1);\n  const [firstCard, setFirstCard] = useState(null);\n  const [secondCard, setSecondCard] = useState(null);\n  const [hiraganaSamples, setHiraganaSamples] = useState([]);\n  const [hiraganaPicked, setHiraganaPicked] = useState([]);\n  const [gameAdvanced, setGameAdvanced] = useState(0);\n  const [openedCards, setOpenedCards] = useState([]);\n  const [continuos, setContinuos] = useState(0);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const cards = document.querySelectorAll(\".card\");\n      cards.forEach((element) => {\n        element.style.transform = \"rotateY(0deg)\";\n      });\n    }, 5000);\n  }, []);\n\n  useEffect(() => {\n    setScore(gameAdvanced * 10 * continuos + score);\n\n    if (gameAdvanced === 0) {\n      const [randomSamples, picked] = getRandomSamples(number * 2);\n\n      setHiraganaSamples(randomSamples);\n      setHiraganaPicked(picked);\n    }\n    if (gameAdvanced % (number * 2) === 0 && gameAdvanced > 0) {\n      const [randomSamples, picked] = getRandomSamples(\n        number * 2,\n        hiraganaPicked\n      );\n      setHiraganaSamples(randomSamples);\n      setHiraganaPicked(picked);\n      setContinuos(0);\n\n      setTimeout(() => {\n        openedCards.forEach((element) => {\n          element.style.transform = \"rotateY(0deg)\";\n        });\n        setOpenedCards([]);\n      }, 5000);\n    }\n    // eslint-disable-next-line\n  }, [gameAdvanced]);\n\n  useEffect(() => {\n    if (firstCard !== null && secondCard !== null) {\n      if (\n        firstCard.value.character === secondCard.value.character &&\n        firstCard.value.id !== secondCard.value.id &&\n        openedCards.indexOf(firstCard.ref) === -1 &&\n        openedCards.indexOf(secondCard.ref) === -1\n      ) {\n        setContinuos(continuos + 1);\n        setGameAdvanced(gameAdvanced + 1);\n        setOpenedCards([...openedCards, firstCard.ref, secondCard.ref]);\n      } else {\n        setTimeout(() => {\n          if (\n            openedCards.indexOf(firstCard.ref) === -1 &&\n            openedCards.indexOf(secondCard.ref) === -1\n          ) {\n            setContinuos(0);\n            firstCard.ref.style.transform = \"rotateY(0deg)\";\n            secondCard.ref.style.transform = \"rotateY(0deg)\";\n          }\n        }, 1000);\n      }\n    }\n    // eslint-disable-next-line\n  }, [secondCard]);\n\n  return (\n    <Container>\n      <Title>{`Score: ${score}`}</Title>\n      <CardContainer numberRowsAndColumns={number} size={300}>\n        {hiraganaSamples.map((value, index) => (\n          <Card\n            className=\"card\"\n            key={index + 1}\n            onClick={(e) => {\n              e.currentTarget.querySelector(\"audio\").play();\n              if (openedCards.indexOf(e.currentTarget) === -1) {\n                e.currentTarget.style.transform = \"rotateY(180deg)\";\n                if (flipCounter >= 2) {\n                  setSecondCard({ value, ref: e.currentTarget });\n                  setFlipCounter(1);\n                } else {\n                  setFirstCard({ value, ref: e.currentTarget });\n                  setFlipCounter(flipCounter + 1);\n                }\n              }\n            }}\n          >\n            <audio src={`./sounds/${value.sound}`} type=\"audio/mpeg\"></audio>\n            <CardFront>\n              <span>{index + 1}</span>\n            </CardFront>\n            <CardBack color={value.color}>\n              <span>{value.character}</span>\n              <span>{value.romaji}</span>\n            </CardBack>\n          </Card>\n        ))}\n      </CardContainer>\n      <Table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>a</th>\n            <th>i</th>\n            <th>u</th>\n            <th>e</th>\n            <th>o</th>\n          </tr>\n        </thead>\n        <tbody>\n          {hiragana_divided.map((element) => (\n            <tr>\n              <td>{element.letter}</td>\n              {element.hiragana.map((value) => (\n                <td\n                  style={{\n                    background: value?.color,\n                    padding: \"12px\",\n                    color:\n                      parseInt(\n                        value.color?.match(/hsl\\((.+),(.+)%,(.+)%\\)/)[3]\n                      ) > 30\n                        ? \"#000\"\n                        : \"#fff\",\n                  }}\n                >\n                  {value.character}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport default Home;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n*,border-style,html{\n  margin:0;\n  padding:0;\n  border:0;\n  box-sizing:border-box; \n  outline:none;\n}\n\n#root{\n  background:#121212;\n  font-size:10px;\n  font-family:sans-serif;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  height:100%;\n}\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Home from \"./pages/Home\";\nimport { GlobalStyle } from \"./styles\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}